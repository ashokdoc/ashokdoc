import json
import boto3
from botocore.exceptions import ClientError
import time

destinationRegion = "ap-south-1"
sourceRegion = 'ap-south-1'
rdsInstanceName = 'database-1'


def lambda_handler(event, context):
    rdsDestinationClient = boto3.client('rds', region_name=destinationRegion)
    rdsSourceClient = boto3.client('rds', region_name=sourceRegion)

    snapshots = rdsSourceClient.describe_db_snapshots(DBInstanceIdentifier=rdsInstanceName, SnapshotType='manual')

    for snapshot in snapshots['DBSnapshots']:
        if snapshot['Status'] == 'available':
            sourceSnapshotARN = snapshot['DBSnapshotArn']

            sourceSnapshotIdentifer = snapshot['DBSnapshotIdentifier']
            targetSnapshotIdentifer = "{0}-ManualCopy".format(sourceSnapshotIdentifer)
            targetSnapshotIdentifer = targetSnapshotIdentifer.replace(":", "-")
            time.sleep(.10)
            try:
                copy = rdsDestinationClient.copy_db_snapshot(SourceDBSnapshotIdentifier=sourceSnapshotARN,
                                                             TargetDBSnapshotIdentifier=targetSnapshotIdentifer,
                                                             SourceRegion=sourceRegion)
                print("Started Copy of Snapshot {0} in {2} to {1} in {3} ".format(sourceSnapshotIdentifer,
                                                                                  targetSnapshotIdentifer, sourceRegion,
                                                                                  destinationRegion))
            except ClientError as ex:
                if ex.response['Error']['Code'] == 'DBSnapshotAlreadyExists':
                    print("Snapshot  {0} already exist".format(targetSnapshotIdentifer))
                else:
                    print("ERROR: {0}".format(ex.response['Error']['Code']))

    print(snapshots)
