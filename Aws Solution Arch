Solution Architech Certification: 

P agent -->> to forward key to the other instance, to use this in putty tick the allow agent forwarding.

types of instances : (Tenancy)

1. Shared : Run a shared hardware instance
2. Dedicated : Run a dedicated instance
3. Dedicated Host : IN this mode the underlaying hardware won't change even afte the reboot

Elastic Network Interface: 
eth0
A network interface can include the following attributes:
    1. A primary private IPv4 address from the IPv4 address range of your VPC
	2. One Elastic IP address (IPv4) per private IPv4 address
	3. One public IPv4 address
	4. One Public IPv4 Address 
	5. A MAC address 
	6. one or more security groups
	7. One instance can have multiple IP address
	Scenarios for Network Interface 
	1. To create low budget high avaliability solution
	2. creating a managment network
	    In this secnario the public ip connected to eth0 primiary and secound eth1 can be used to managment of backend process.
		for example : the public facing allowing a security group of port 80, 443, while the secoundary group allow only port number 22
    * with the eni we can attach a two security groups to a single instance.
	  why we have to create two security groups : ex : we can use ne security for behind the load balancer and other for backend access , good security practise also


Amazon EC2 pricing options: 

On-Demand: Like pay how much time you use, means you have to pay running time only.
Reserved: 2 terms avaliable 1 yr and 3 yr; 3 payment types; 
Scheduled Reserved: Avaliable for 3 frequencies, Daily, Monthly, Weekly 
Spot Instaces: Aws is giving unused instance to the biding, max 6 hours.
Dedicated Instances: it will charged per hr based.
Dedicated Host: pay fully physical host irrespective of instances.



Auto Recovery-Events-Hard&soft limits:

Types of status checks:
1. system status checks
  if anything goes wrong that should be taken care by the amazon, even stop and start solvely the issue in case ebs instance
   a. loss of network connectivity
   b. loss of system power
   c. software issue on the physical host
   d. hardware issue on the physical host that impact network reachablity
  
2. instance status checks
   aws send an arp (address resolution protocol) request to the network interface. this detech the problems in the instace 
   a. failed system status checks
   b. incorrect networking or startup configuration 
   c. exhaust memory
   d. corrupted file system
 scheduled Event:
 we can schedule an event like cloud watch alaram when ever the system status check faild we can create auto recovery.
Events : it will given by the aws like mainatance
limits: it will tell out aws account limits




VPC: virtual private cloud:

Cidr : 10.0.0.0/26  : total avaliable ip address : 2^ (32-26)-->> 2^6= 64
subnet calculation: 
    10.0.0.0/28 -->> 11 ip address  2^(32-28)= 2^4-->16 ip
	10.0.0.16/28 -->> 
	10.0.0.32/28 -->>
	10.0.0.48/28 -->> 
200 subnets per vpc canbe created

cidr 10.20.0.0/20
subnet  10.20.0.0/24
		10.20.1.0/24
		10.20.2.0/24

one route table can have multiple subnetes but one subnet have one route table only.
only one igw attached to one vpc
NAT: private instances does not communite directly to the internet inisted they communite to the NAT and downlode the required patches

NACL: network access control list 
    when a vpc created nacl also get created one vpc has only one NACL and the lower number rule no first executed.

scale-up the vpc: the vpc can be increased but the thing is that we cannot modify the exesting cidr block but can add extra cidr ipv4 block.

VPC end points: in case of private instacne has to connect to a s3 bucket but s3 bucket has public in nature , in that case the private instace has no access to the s3 bucket so reslove that issue VPC end point come into picture.
    just add the role to it for ex: s3 then we can access only s3 bucket but not internet
	
	
	
VPC peering in AWS: vpc peering does not work accross the region, where as it will across the accounts.
important points to remember: 
    a. create a peering connection 
	b. make sure that add first vpc
	c. make sure that add route table 1 vpc to 2nd vpc and 2nd to first vpc cidr block
	




Elastic Load balancing:

a. elb can be the public ir private that depends on the subnet
b. you can move web-server to private-subnet and keep elb in the public subnet- with in the vpc all the instance can talk together
c. traffic gets distributed in round-robin fashion
d. elb should be always be accessd dns only
e. elb automatically expands

Classic Load Balancer: 




Differences b/w NAT and ELB:

nat : 

equivalent of forward proxy 
should placed always in public subnet 
traffic originated from private instance going to internet 

elb: 

equivalent of reverse proxy 
canbe placed in public and private subnets
traffic originated from internet served by public and private instance

ex: if we have an instance (webserver) that is placed in the private subnet, but canbe accessed through elb what if the private instance call an api, in this case we can use nat gateway to forward the request.

Auto-scalling:




IAM: Identity and access managment

Policy : Collection of differnet permissions 
		 Permissions: 
		 Arn: Amazon Resource Name
         Create in-line policy
Roles : it is not advisable to keep authentication details in the ec2 machine an if you want to access a particular service in such type of cases we go with the roles concept 
Trust Relationship : which service has to belive

 
AWS S3: 
 Types of storge class : 

 Standard 	            Frequently accessed data
 Intelligent-Tiering 	Long-lived data with changing or unknown access patterns
 Standard-IA 	        Long-lived, infrequently accessed data
 One Zone-IA 			Long-lived, infrequently accessed, non-critical data
 Glacier 				Archive data with retrieval times ranging from minutes to hours
 Glacier Deep Archive 	Archive data that rarely, if ever, needs to be accessed with retrieval times in hours
 




